version: "3.4"
services:
  example-app:
    build: ../../
    ports:
      - 8080:8080
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
    command: 
      - java
      - -javaagent:/opentelemetry-javaagent.jar
      - -Dotel.resource.attributes=service.name=o11y-java-lab
      - -Dotel.exporter.otlp.endpoint=http://collector:4317
      - -Dotel.logs.exporter=otlp
      - -jar
      - app.jar
    depends_on:
    - collector
    - loki
    - db
    - redis
  # https://grafana.com/docs/opentelemetry/collector/troubleshooting/
  collector:
    # image: otel/opentelemetry-collector:0.93.0
    image: otel/opentelemetry-collector-contrib:0.93.0
    volumes:
    - ../../config/collector.yaml:/etc/otelcol-contrib/config.yaml
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    depends_on:
    - tempo
    - loki

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
    - tempo
    - loki  
  
  tempo:
    image: grafana/tempo
    command:
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/var/tempo
      - --auth.enabled=false
    ports:
      - 8081:80

  loki:
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  db: 
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tempo_test
    ports:
      - 5432:5432

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"